// <auto-generated />
using System;
using AtosPersonalFinance_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AtosPersonalFinance_API.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230704221612_add_colors_and_icons")]
    partial class add_colors_and_icons
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AtosPersonalFinance_API.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("color");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("icon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("name");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "4CAF50",
                            Icon = "attach_money",
                            Name = "Salário",
                            Type = "revenue"
                        },
                        new
                        {
                            Id = 2,
                            Color = "9C27B0",
                            Icon = "show_chart",
                            Name = "Rendimento de Investimentos",
                            Type = "revenue"
                        },
                        new
                        {
                            Id = 3,
                            Color = "FF9800",
                            Icon = "shopping_cart",
                            Name = "Venda de Produtos",
                            Type = "revenue"
                        },
                        new
                        {
                            Id = 4,
                            Color = "2196F3",
                            Icon = "receipt",
                            Name = "Reembolsos",
                            Type = "revenue"
                        },
                        new
                        {
                            Id = 5,
                            Color = "009688",
                            Icon = "home",
                            Name = "Aluguéis Recebidos",
                            Type = "revenue"
                        },
                        new
                        {
                            Id = 6,
                            Color = "607D8B",
                            Icon = "category",
                            Name = "Outros",
                            Type = "revenue"
                        },
                        new
                        {
                            Id = 7,
                            Color = "F44336",
                            Icon = "restaurant",
                            Name = "Alimentação",
                            Type = "expense"
                        },
                        new
                        {
                            Id = 8,
                            Color = "3F51B5",
                            Icon = "home",
                            Name = "Moradia (Aluguel/Financiamento)",
                            Type = "expense"
                        },
                        new
                        {
                            Id = 9,
                            Color = "FFC107",
                            Icon = "commute",
                            Name = "Transporte",
                            Type = "expense"
                        },
                        new
                        {
                            Id = 10,
                            Color = "2196F3",
                            Icon = "school",
                            Name = "Educação",
                            Type = "expense"
                        },
                        new
                        {
                            Id = 11,
                            Color = "E91E63",
                            Icon = "local_hospital",
                            Name = "Saúde",
                            Type = "expense"
                        },
                        new
                        {
                            Id = 12,
                            Color = "673AB7",
                            Icon = "sports_esports",
                            Name = "Lazer e Entretenimento",
                            Type = "expense"
                        },
                        new
                        {
                            Id = 13,
                            Color = "00BCD5",
                            Icon = "shopping_basket",
                            Name = "Compras",
                            Type = "expense"
                        },
                        new
                        {
                            Id = 14,
                            Color = "FF5722",
                            Icon = "credit_card",
                            Name = "Dívidas e Empréstimos",
                            Type = "expense"
                        },
                        new
                        {
                            Id = 15,
                            Color = "795548",
                            Icon = "trending_up",
                            Name = "Investimentos",
                            Type = "expense"
                        },
                        new
                        {
                            Id = 16,
                            Color = "8BC34A",
                            Icon = "favorite",
                            Name = "Doações e Caridade",
                            Type = "expense"
                        },
                        new
                        {
                            Id = 17,
                            Color = "607D8B",
                            Icon = "category",
                            Name = "Outros",
                            Type = "expense"
                        });
                });

            modelBuilder.Entity("AtosPersonalFinance_API.Models.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("created_AT")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("description");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("transaction_type");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("SMALLDATETIME")
                        .HasColumnName("updated_AT")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("AtosPersonalFinance_API.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("password");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("AtosPersonalFinance_API.Models.Entities.Transaction", b =>
                {
                    b.HasOne("AtosPersonalFinance_API.Models.Entities.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_transaction_category");

                    b.HasOne("AtosPersonalFinance_API.Models.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_transaction_user");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AtosPersonalFinance_API.Models.Entities.Category", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("AtosPersonalFinance_API.Models.Entities.User", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
